openapi: 3.0.3
info:
  title: Swagger for MyHome
  description: This is openapi specification for MyHome application.
  contact:
    email: jeanbaptiste.wittner@outlook.com
  license:
    name: GPL-3.0 License
    url: 'https://www.gnu.org/licenses/gpl-3.0.html'
  version: 0.2.0
externalDocs:
  description: Find out more about Swagger
  url: 'https://swagger.io'
servers:
  - url: 'http://localhost:7080/api'
tags:
  - name: Authentication
    description: Management of authentication
paths:
#  ----- PATHS  ---------------------------------------------
#  ----- AUTHENTICATION  ------------------------------------
  /authentication/registration:
    put:
      tags:
        - Authentication
      summary: Register a new user account
      operationId: registration
      security: []
      requestBody:
        description: Object that needs to register a new user
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationParameter'
          '*/*':
            schema:
              $ref: '#/components/schemas/UserRegistrationParameter'
      responses:
        '200':
          description: successful operation
        '400':
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodArgumentNotValidExceptionDTO'
        '500':
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodArgumentNotValidExceptionDTO'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodArgumentNotValidExceptionDTO'
#  ----- AUTHENTICATION  ------------------------------------
components:
  schemas:
    FunctionalExceptionDTO:
      type: object
      properties:
        status:
          type: integer
        details:
          type: string
        exception:
          type: string
        message:
          type: string
        timestamp:
          type: string
          format: date-time
      required:
        - status
        - details
        - exception
        - message
        - timestamp
    MethodArgumentNotValidExceptionDTO:
      type: object
      properties:
        status:
          type: integer
        details:
          type: string
        exception:
          type: string
        message:
          type: string
        timestamp:
          type: string
          format: date-time
        field:
          type: string
        objectName:
          type: string
      required:
        - status
        - details
        - exception
        - message
        - timestamp
        - field
        - objectName
#  ----- PARAMETERS  ----------------------------------------
    UserRegistrationParameter:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
          pattern: >-
            ^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$
        firstName:
          type: string
        lastName:
          type: string
        password:
          type: string
          pattern: '^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=\S+$).{8,}$'
      required:
        - username
        - email
        - firstName
        - lastName
        - password
#  ----- PARAMETERS  ----------------------------------------
#  ----- DTO  -----------------------------------------------
#  ----- DTO  -----------------------------------------------
#  ----- Enum -----------------------------------------------
#  ----- Enum -----------------------------------------------
